-- Even Fibonacci numbers

-- Problem 2

-- Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
-- 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
-- By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

fibonacciSequence :: [Integer]
fibonacciSequence = zipWith (+) (1:fibonacciSequence) (0:1:fibonacciSequence)

subFibonacciSequence :: [Integer]
subFibonacciSequence = takeWhile (< 4000000) fibonacciSequence

getEvenValueTerms :: [Integer] -> [Integer]
getEvenValueTerms = filter (\x -> mod x 2 == 0)

evenValueTerms :: [Integer]
evenValueTerms = getEvenValueTerms subFibonacciSequence

sumOfEvenValueTerms :: Integer
sumOfEvenValueTerms = sum evenValueTerms

main = do
    putStrLn (show  sumOfEvenValueTerms)